
variables:
    DISTROS: 'kali-rolling kali-dev kali-last-snapshot'

stages:
    - build
    - register
    - test
    - push

build-rootfs:
    stage: build
    image: debian:testing
    artifacts:
        paths:
            - "*.tar.xz"
    script: |
        set -e
        apt-get -y update
        apt-get -y install wget debootstrap
        # XXX: don't harcode the version
        wget http://http.kali.org/kali/pool/main/k/kali-archive-keyring/kali-archive-keyring_2018.2_all.deb
        dpkg -i kali-archive-keyring_*_all.deb
        for distro in $DISTROS; do
            ./build-rootfs.sh $distro
        done

build-docker-images:
    stage: register
    image: docker:latest
    services:
        - docker:dind
    dependencies:
        - build-rootfs
    artifacts:
        paths:
            - "*.conf"
    script: |
        set -e
        apk update
        apk add git
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
        for distro in $DISTROS; do
            ./docker-build.sh $distro
        done

test-docker-images:
    stage: test
    image: docker:latest
    services:
        - docker:dind
    dependencies:
        - build-docker-images
    script: |
        set -e
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
        for distro in $DISTROS; do
            . ./$distro.conf || true
            docker pull $CI_REGISTRY_IMAGE/$IMAGE:$VERSION
            docker run $CI_REGISTRY_IMAGE/$IMAGE:$VERSION /bin/true
            docker run $CI_REGISTRY_IMAGE/$IMAGE:$VERSION test -e /etc/dpkg/origins/kali
        done

push-docker-images:
    stage: push
    image: docker:latest
    services:
        - docker:dind
    dependencies:
        - build-docker-images
    script: |
        set -e
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
        for distro in $DISTROS; do
            ./docker-push.sh $distro
        done
        # Login to docker hub and push there too
        DOCKER_HUB_REGISTRY="docker.io"
        DOCKER_HUB_REGISTRY_IMAGE="index.docker.io/$DOCKER_HUB_ORGANIZATION"
        docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_ACCESS_TOKEN $DOCKER_HUB_REGISTRY
        for distro in $DISTROS; do
            . ./$distro.conf || true
            docker tag $CI_REGISTRY_IMAGE/$IMAGE:$VERSION $DOCKER_HUB_REGISTRY_IMAGE/$IMAGE:$VERSION
            docker tag $CI_REGISTRY_IMAGE/$IMAGE:latest $DOCKER_HUB_REGISTRY_IMAGE/$IMAGE:latest
            docker push $DOCKER_HUB_REGISTRY_IMAGE/$IMAGE:$VERSION
            docker push $DOCKER_HUB_REGISTRY_IMAGE/$IMAGE:latest
        done


# TODO: clean up old images that accumulate...
